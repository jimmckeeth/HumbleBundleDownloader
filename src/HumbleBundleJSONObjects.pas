unit HumbleBundleJSONObjects;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2021-11-12 01:41:01
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

TPayeeClass = class
private
  FHuman_name: String;
  FMachine_name: String;
public
  property human_name: String read FHuman_name write FHuman_name;
  property machine_name: String read FMachine_name write FMachine_name;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TPayeeClass;
end;

TOptions_dictClass = class
private
  FIs64bittoggle: Extended;
public
  property is64bittoggle: Extended read FIs64bittoggle write FIs64bittoggle;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TOptions_dictClass;
end;

TUrlClass = class
private
  FBittorrent: String;
  FWeb: String;
public
  property bittorrent: String read FBittorrent write FBittorrent;
  property web: String read FWeb write FWeb;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TUrlClass;
end;

TDownload_structClass = class
private
  FFile_size: Extended;
  FHuman_size: String;
  FMd5: String;
  FName: String;
  FSha1: String;
  FTimestamp: Extended;
  FUrl: TUrlClass;
public
  property file_size: Extended read FFile_size write FFile_size;
  property human_size: String read FHuman_size write FHuman_size;
  property md5: String read FMd5 write FMd5;
  property name: String read FName write FName;
  property sha1: String read FSha1 write FSha1;
  property timestamp: Extended read FTimestamp write FTimestamp;
  property url: TUrlClass read FUrl write FUrl;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TDownload_structClass;
end;

TDownloadsClass = class
private
  FAndroid_app_only: Boolean;
  FDownload_identifier: String;
  FDownload_struct: TArray<TDownload_structClass>;
  FDownload_version_number: Extended;
  FMachine_name: String;
  FOptions_dict: TOptions_dictClass;
  FPlatform: String;
public
  property android_app_only: Boolean read FAndroid_app_only write FAndroid_app_only;
  property download_identifier: String read FDownload_identifier write FDownload_identifier;
  property download_struct: TArray<TDownload_structClass> read FDownload_struct write FDownload_struct;
  property download_version_number: Extended read FDownload_version_number write FDownload_version_number;
  property machine_name: String read FMachine_name write FMachine_name;
  property options_dict: TOptions_dictClass read FOptions_dict write FOptions_dict;
  property platform: String read FPlatform write FPlatform;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TDownloadsClass;
end;

TSubproductsClass = class
private
  FCustom_download_page_box_html: String;
  FDownloads: TArray<TDownloadsClass>;
  FHuman_name: String;
  FIcon: String;
  FMachine_name: String;
  FPayee: TPayeeClass;
  FUrl: String;
public
  property custom_download_page_box_html: String read FCustom_download_page_box_html write FCustom_download_page_box_html;
  property downloads: TArray<TDownloadsClass> read FDownloads write FDownloads;
  property human_name: String read FHuman_name write FHuman_name;
  property icon: String read FIcon write FIcon;
  property machine_name: String read FMachine_name write FMachine_name;
  property payee: TPayeeClass read FPayee write FPayee;
  property url: String read FUrl write FUrl;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TSubproductsClass;
end;

TEmpty_tpkdsClass = class
private
public
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TEmpty_tpkdsClass;
end;

TProductClass = class
private
  FCategory: String;
  FEmpty_tpkds: TEmpty_tpkdsClass;
  FHuman_name: String;
  FMachine_name: String;
  FPartial_gift_enabled: Boolean;
  FPost_purchase_text: String;
public
  property category: String read FCategory write FCategory;
  property empty_tpkds: TEmpty_tpkdsClass read FEmpty_tpkds write FEmpty_tpkds;
  property human_name: String read FHuman_name write FHuman_name;
  property machine_name: String read FMachine_name write FMachine_name;
  property partial_gift_enabled: Boolean read FPartial_gift_enabled write FPartial_gift_enabled;
  property post_purchase_text: String read FPost_purchase_text write FPost_purchase_text;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TProductClass;
end;

TRootClass = class
private
  FAmount_spent: Extended;
  FChoices_remaining: Extended;
  FClaimed: Boolean;
  FCreated: String;
  FGamekey: String;
  FIs_giftee: Boolean;
  FPath_ids: TArray<TDate>;
  FProduct: TProductClass;
  FSubproducts: TArray<TSubproductsClass>;
  FTotal: Extended;
  FTotal_choices: Extended;
  FUid: String;
public
  property amount_spent: Extended read FAmount_spent write FAmount_spent;
  property choices_remaining: Extended read FChoices_remaining write FChoices_remaining;
  property claimed: Boolean read FClaimed write FClaimed;
  property created: String read FCreated write FCreated;
  property gamekey: String read FGamekey write FGamekey;
  property is_giftee: Boolean read FIs_giftee write FIs_giftee;
  property path_ids: TArray<TDate> read FPath_ids write FPath_ids;
  property product: TProductClass read FProduct write FProduct;
  property subproducts: TArray<TSubproductsClass> read FSubproducts write FSubproducts;
  property total: Extended read FTotal write FTotal;
  property total_choices: Extended read FTotal_choices write FTotal_choices;
  property uid: String read FUid write FUid;
  constructor Create;
  destructor Destroy; override;
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TRootClass;
end;

implementation

{TPayeeClass}


function TPayeeClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TPayeeClass.FromJsonString(AJsonString: string): TPayeeClass;
begin
  result := TJson.JsonToObject<TPayeeClass>(AJsonString)
end;

{TOptions_dictClass}


function TOptions_dictClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TOptions_dictClass.FromJsonString(AJsonString: string): TOptions_dictClass;
begin
  result := TJson.JsonToObject<TOptions_dictClass>(AJsonString)
end;

{TUrlClass}


function TUrlClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TUrlClass.FromJsonString(AJsonString: string): TUrlClass;
begin
  result := TJson.JsonToObject<TUrlClass>(AJsonString)
end;

{TDownload_structClass}

constructor TDownload_structClass.Create;
begin
  inherited;
  FUrl := TUrlClass.Create();
end;

destructor TDownload_structClass.Destroy;
begin
  FUrl.free;
  inherited;
end;

function TDownload_structClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TDownload_structClass.FromJsonString(AJsonString: string): TDownload_structClass;
begin
  result := TJson.JsonToObject<TDownload_structClass>(AJsonString)
end;

{TDownloadsClass}

constructor TDownloadsClass.Create;
begin
  inherited;
  FOptions_dict := TOptions_dictClass.Create();
end;

destructor TDownloadsClass.Destroy;
var
  Ldownload_structItem: TDownload_structClass;
begin

 for Ldownload_structItem in FDownload_struct do
   Ldownload_structItem.free;

  FOptions_dict.free;
  inherited;
end;

function TDownloadsClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TDownloadsClass.FromJsonString(AJsonString: string): TDownloadsClass;
begin
  result := TJson.JsonToObject<TDownloadsClass>(AJsonString)
end;

{TSubproductsClass}

constructor TSubproductsClass.Create;
begin
  inherited;
  FPayee := TPayeeClass.Create();
end;

destructor TSubproductsClass.Destroy;
var
  LdownloadsItem: TDownloadsClass;
begin

 for LdownloadsItem in FDownloads do
   LdownloadsItem.free;

  FPayee.free;
  inherited;
end;

function TSubproductsClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TSubproductsClass.FromJsonString(AJsonString: string): TSubproductsClass;
begin
  result := TJson.JsonToObject<TSubproductsClass>(AJsonString)
end;

{TEmpty_tpkdsClass}


function TEmpty_tpkdsClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TEmpty_tpkdsClass.FromJsonString(AJsonString: string): TEmpty_tpkdsClass;
begin
  result := TJson.JsonToObject<TEmpty_tpkdsClass>(AJsonString)
end;

{TProductClass}

constructor TProductClass.Create;
begin
  inherited;
  FEmpty_tpkds := TEmpty_tpkdsClass.Create();
end;

destructor TProductClass.Destroy;
begin
  FEmpty_tpkds.free;
  inherited;
end;

function TProductClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TProductClass.FromJsonString(AJsonString: string): TProductClass;
begin
  result := TJson.JsonToObject<TProductClass>(AJsonString)
end;

{TRootClass}

constructor TRootClass.Create;
begin
  inherited;
  FProduct := TProductClass.Create();
end;

destructor TRootClass.Destroy;
var
  LsubproductsItem: TSubproductsClass;
begin

 for LsubproductsItem in FSubproducts do
   LsubproductsItem.free;

  FProduct.free;
  inherited;
end;

function TRootClass.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TRootClass.FromJsonString(AJsonString: string): TRootClass;
begin
  result := TJson.JsonToObject<TRootClass>(AJsonString)
end;

end.

